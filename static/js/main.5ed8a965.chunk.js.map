{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","NumberOfEvents.js","mock-data.js","config.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","showDetails","handleShowDetails","setState","formatStartTime","time","props","event","start","dateTime","formattedStartTime","moment","format","className","formatEndTime","end","formattedEndTime","this","summary","location","onClick","class","description","organizer","email","Component","EventList","events","map","id","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","handleItemClicked","suggestion","updateEvents","type","onChange","onFocus","style","display","NumberOfEvents","eventNumber","mockData","config","GET_EVENTS","GET_TOKEN","GET_AUTH","GOOGLE_API","extractLocations","Set","getEvents","a","NProgress","window","href","startsWith","done","getAccessToken","token","removeQuery","url","Config","axios","get","result","data","localStorage","setItem","JSON","stringify","history","pushState","pathname","newurl","protocol","host","accessToken","getItem","checkToken","tokenCheck","error","removeItem","searchParams","URLSearchParams","search","code","results","authUrl","getToken","fetch","then","res","json","catch","encodeCode","encodeURIComponent","access_token","App","numberOfEvents","currentLocation","eventCount","filteredEvents","slice","mounted","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.5ed8a965.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport moment from 'moment';\r\n\r\nclass Event extends Component {\r\n    state = {\r\n        showDetails: false\r\n    };\r\n\r\n    // toggle button function\r\n    handleShowDetails = () => {\r\n        if(this.state.showDetails === false){\r\n            this.setState({ showDetails: true});\r\n        } else {\r\n            this.setState({ showDetails: false})\r\n        }\r\n    };\r\n\r\n    formatStartTime = () => {\r\n        const time = this.props.event.start.dateTime;\r\n        const formattedStartTime = moment(time).format('dddd, MMMM, Do YYYY, h:MM a');\r\n        return <span className='start-dateTime'>{`${formattedStartTime}`}</span>\r\n    }\r\n\r\n    formatEndTime = () => {\r\n        const time = this.props.event.end.dateTime;\r\n        const formattedEndTime = moment(time).format('dddd, MMMM, Do YYYY, h:MM a');\r\n        return <span className='start-dateTime'>{`${formattedEndTime}`}</span>\r\n    }\r\n\r\n    render() {\r\n        const showDetails = this.state.showDetails;\r\n        // passed event from Event.test.js as prop event={mockData}, no need to import it again in this component\r\n        const {event} = this.props;\r\n\r\n        return(\r\n            <div className='Event'>\r\n                <div className='event-collapsed'>\r\n                    <h3 className='event-name'>{event.summary}</h3>\r\n                    <p className='event-location'>{event.location}</p>\r\n                    {!showDetails && (\r\n                        <button className='details-btn' onClick={this.handleShowDetails}>\r\n                            Expand This Event\r\n                        </button>\r\n                    )}\r\n                    {showDetails && (\r\n                        <button className='details-btn' onClick={this.handleShowDetails}>\r\n                            Collapse This Event\r\n                        </button>\r\n                    )}\r\n                </div>\r\n                \r\n                {showDetails && (\r\n                    <div className='event-expanded'>\r\n                        <p className='event-start'><span class='time-label'>Starts @ </span>{this.formatStartTime()}</p>\r\n                        <p className='event-end'><span class='time-label'>Ends @ </span>{this.formatEndTime()}</p>\r\n                        <p className='event-description'>{event.description}</p>\r\n                        <p className='event-organizer'>Get in touch with us about this event at: <span class='org-email'>{event.organizer.email}</span></p>\r\n\r\n                    </div>\r\n                )}\r\n\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Event;\r\n","import React, { Component } from 'react';\r\nimport Event from './Event';\r\n\r\nclass EventList extends Component {\r\n    render(){\r\n        const { events } = this.props;\r\n        return(\r\n            <ul className='EventList'>\r\n                {events.map(event => \r\n                    <li key={event.id}>\r\n                        <Event event={event}/>\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EventList;","import React, { Component } from 'react';\r\n\r\nclass CitySearch extends Component {\r\n\r\n  state = {\r\n    query: '',\r\n    suggestions: [],\r\n    showSuggestions: undefined\r\n  }\r\n\r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n    // using this.props.location because we're passing it from App component later\r\n    const suggestions = this.props.locations.filter((location) => {\r\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n    });\r\n    this.setState({\r\n      query:value,\r\n      suggestions\r\n    });\r\n  }\r\n\r\n  handleItemClicked = (suggestion) => {\r\n    this.setState({\r\n      query: suggestion,\r\n      showSuggestions: false\r\n    });\r\n    this.props.updateEvents(suggestion);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='CitySearch'>\r\n\r\n        <input \r\n        type='text' \r\n        className='city' \r\n        value={this.state.query} \r\n        onChange={this.handleInputChanged}\r\n        onFocus={() => { this.setState({ showSuggestions: true})}}\r\n        />\r\n\r\n{/* if showSuggestions is true, list is visable, style won't have display: none, so list won't become visible */}\r\n        <ul className='suggestions' style={this.state.showSuggestions ? {}: {display: 'none'}}>\r\n          {this.state.suggestions.map((suggestion) => (\r\n            <li \r\n            key={suggestion}\r\n            onClick={() => this.handleItemClicked(suggestion)}\r\n            >\r\n              {suggestion}\r\n            </li>\r\n          ))}\r\n          <li onClick={() => this.handleItemClicked('all')}>\r\n            <b>See all cities</b>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CitySearch;","import React, {Component} from 'react';\r\n\r\nclass NumberOfEvents extends Component {\r\n\r\n    state = {\r\n        // default number of events\r\n        eventNumber: 32,\r\n    };\r\n\r\n    handleInputChanged = (event) => {\r\n        const value = event.target.value;\r\n        this.props.updateEvents(null, value);\r\n        this.setState({\r\n            eventNumber: value\r\n        })    \r\n    }\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div className='numberOfEvents'>\r\n\r\n                <label className='eventNumberLabel'>Number of events/page:</label>\r\n                <input\r\n                type='number'\r\n                id='eventNumber'\r\n                className='eventNumber'\r\n                value={this.state.eventNumber}\r\n                onChange={this.handleInputChanged}\r\n                />\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NumberOfEvents;","const mockData= [\r\n{\r\n   'kind': 'calendar#event',\r\n   'etag': '\\'3181161784712000\\'',\r\n   'id': '4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z',\r\n   'status': 'confirmed',\r\n   'htmlLink': 'https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20',\r\n   'created': '2020-05-19T19:17:46.000Z',\r\n   'updated': '2020-05-27T12:01:32.356Z',\r\n   'summary': 'Learn JavaScript',\r\n   'description': 'Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.',\r\n   'location': 'London, UK',\r\n   'creator': {\r\n    'email': 'fullstackwebdev@careerfoundry.com',\r\n    'self': true\r\n   },\r\n   'organizer': {\r\n    'email': 'fullstackwebdev@careerfoundry.com',\r\n    'self': true\r\n   },\r\n   'start': {\r\n    'dateTime': '2020-05-19T16:00:00+02:00',\r\n    'timeZone': 'Europe/Berlin'\r\n   },\r\n   'end': {\r\n    'dateTime': '2020-05-19T17:00:00+02:00',\r\n    'timeZone': 'Europe/Berlin'\r\n   },\r\n   'recurringEventId': '4eahs9ghkhrvkld72hogu9ph3e',\r\n   'originalStartTime': {\r\n    'dateTime': '2020-05-19T16:00:00+02:00',\r\n    'timeZone': 'Europe/Berlin'\r\n   },\r\n   'iCalUID': '4eahs9ghkhrvkld72hogu9ph3e@google.com',\r\n   'sequence': 0,\r\n   'reminders': {\r\n    'useDefault': true\r\n   },\r\n   'eventType': 'default'\r\n  },\r\n  {\r\n   'kind': 'calendar#event',\r\n   'etag': '\\'3181159875584000\\'',\r\n   'id': '3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z',\r\n   'status': 'confirmed',\r\n   'htmlLink': 'https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20',\r\n   'created': '2020-05-19T19:14:30.000Z',\r\n   'updated': '2020-05-27T11:45:37.792Z',\r\n   'summary': 'React is Fun',\r\n   'description': 'Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. ',\r\n   'location': 'Berlin, Germany',\r\n   'creator': {\r\n    'email': 'fullstackwebdev@careerfoundry.com',\r\n    'self': true\r\n   },\r\n   'organizer': {\r\n    'email': 'fullstackwebdev@careerfoundry.com',\r\n    'self': true\r\n   },\r\n   'start': {\r\n    'dateTime': '2020-05-20T14:00:00+02:00',\r\n    'timeZone': 'Europe/Berlin'\r\n   },\r\n   'end': {\r\n    'dateTime': '2020-05-20T15:00:00+02:00',\r\n    'timeZone': 'Europe/Berlin'\r\n   },\r\n   'recurringEventId': '3qtd6uscq4tsi6gc7nmmtpqlct',\r\n   'originalStartTime': {\r\n    'dateTime': '2020-05-20T14:00:00+02:00',\r\n    'timeZone': 'Europe/Berlin'\r\n   },\r\n   'iCalUID': '3qtd6uscq4tsi6gc7nmmtpqlct@google.com',\r\n   'sequence': 0,\r\n   'reminders': {\r\n    'useDefault': true\r\n   },\r\n   'eventType': 'default'\r\n  }\r\n  \r\n\r\n]\r\n\r\nexport {mockData};","const config = {\r\n\r\n    GET_EVENTS: 'https://xixfiq7och.execute-api.ca-central-1.amazonaws.com/dev/api/get-events/',\r\n    GET_TOKEN:'https://xixfiq7och.execute-api.ca-central-1.amazonaws.com/dev/api/token/',\r\n    GET_AUTH:'https://xixfiq7och.execute-api.ca-central-1.amazonaws.com/dev/api/get-auth-url',\r\n    GOOGLE_API: `https://www.googleapis.com/oauth2/v1/tokeninfo?`\r\n}\r\n\r\n\r\nexport default config;","import { mockData } from './mock-data';\r\nimport axios from 'axios';\r\nimport NProgress from 'nprogress';\r\nimport Config from './config';\r\n\r\nexport const extractLocations = (events) => {\r\n  var extractLocations = events.map((event) => event.location);\r\n  var locations = [...new Set(extractLocations)];\r\n  return locations;\r\n};\r\n\r\nexport const getEvents = async () => {\r\n  NProgress.start();\r\n\r\n  // local host will only show mockData, all other endpoints (gh-pages) will show full api\r\n  if (window.location.href.startsWith('http://localhost')) {\r\n    NProgress.done();\r\n    return mockData;\r\n  }\r\n\r\n  const token = await getAccessToken();\r\n\r\n  if (token) {\r\n    removeQuery();\r\n    const url = Config.GET_EVENTS + token;\r\n    const result = await axios.get(url);\r\n    if (result.data) {\r\n      var locations = extractLocations(result.data.events);\r\n      localStorage.setItem('lastEvents', JSON.stringify(result.data));\r\n      localStorage.setItem('locations', JSON.stringify(locations));\r\n    }\r\n    NProgress.done();\r\n    return result.data.events;\r\n  }\r\n};\r\n\r\nconst removeQuery = () => {\r\n  if (window.history.pushState && window.location.pathname) {\r\n    var newurl =\r\n      window.location.protocol +\r\n      '//' +\r\n      window.location.host +\r\n      window.location.pathname;\r\n    window.history.pushState('', '', newurl);\r\n  } else {\r\n    newurl = window.location.protocol + '//' + window.location.host;\r\n    window.history.pushState('', '', newurl);\r\n  }\r\n};\r\n\r\nexport const getAccessToken = async () => {\r\n  const accessToken = localStorage.getItem('access_token');\r\n  const tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n  if (!accessToken || tokenCheck.error) {\r\n    await localStorage.removeItem('access_token');\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const code = await searchParams.get('code');\r\n    if (!code) {\r\n      const results = await axios.get(Config.GET_AUTH);\r\n      const { authUrl } = results.data;\r\n      return (window.location.href = authUrl);\r\n    }\r\n    return code && getToken(code);\r\n  }\r\n  return accessToken;\r\n}\r\n\r\nconst checkToken = async (accessToken) => {\r\n  const result = await fetch(\r\n    `${Config.GOOGLE_API}access_token=${accessToken}`\r\n  )\r\n    .then((res) => res.json())\r\n    .catch((error) => error.json());\r\n\r\n  return result;\r\n}\r\n\r\nconst getToken = async (code) => {\r\n  const encodeCode = encodeURIComponent(code);\r\n  const { access_token } = await fetch(\r\n    Config.GET_TOKEN + encodeCode\r\n  )\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .catch((error) => error);\r\n\r\n  access_token && localStorage.setItem('access_token', access_token);\r\n\r\n  return access_token;\r\n};\r\n\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport EventList from './EventList';\r\nimport CitySearch from './CitySearch';\r\nimport NumberOfEvents from './NumberOfEvents';\r\nimport { extractLocations, getEvents } from './api';\r\nimport './nprogress.css';\r\n\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    events: [],\r\n    locations: [],\r\n    numberOfEvents: 32,\r\n    currentLocation: 'all'\r\n  }\r\n\r\n  updateEvents = (location, eventCount) => {\r\n    const {currentLocation, numberOfEvents} = this.state;\r\n    if (location) {\r\n      getEvents().then((events) => {\r\n        const locationEvents = \r\n          location === 'all'\r\n            ? events\r\n            : events.filter((event) => event.location === location);\r\n        const filteredEvents = locationEvents.slice(0, numberOfEvents);\r\n        this.setState({\r\n          events: filteredEvents,\r\n          currentLocation: location\r\n        });\r\n      });\r\n    } else {\r\n      getEvents().then((events) => {\r\n        const locationEvents = \r\n          currentLocation === 'all'\r\n            ? events\r\n            : events.filter((event) => event.location === currentLocation);\r\n        const filteredEvents = locationEvents.slice(0, eventCount);\r\n        this.setState({\r\n          events: filteredEvents,\r\n          numberOfEvents: eventCount\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.mounted = true;\r\n    getEvents().then((events) => {\r\n      if(this.mounted) {\r\n      this.setState({ events, locations: extractLocations(events) });\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.mounted = false;\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className='App'>\r\n        <CitySearch \r\n          locations={this.state.locations} \r\n          updateEvents={this.updateEvents}\r\n          />\r\n        <NumberOfEvents \r\n          numberOfEvents={this.state.numberOfEvents}\r\n          updateEvents={this.updateEvents}\r\n          />\r\n        <EventList events={this.state.events}/>\r\n      </div>\r\n    )\r\n  };\r\n\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // 'Content is cached for offline use.' message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.unregister();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}